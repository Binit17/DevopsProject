version: "3"

services:
  frontend:
    build: ./frontend
    ports:
      - "8003:80"
    depends_on:
      - backend
    networks:
      - book-inventory-network

  backend:
    build: ./backend
    ports:
      - "3004:3000"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/bookdb
    depends_on:
      - mongodb
    networks:
      - book-inventory-network

  mongodb:
    image: mongo:latest
    ports:
      - "27020:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - book-inventory-network

  database-init:
    build: ./database
    depends_on:
      - mongodb
    networks:
      - book-inventory-network

  # Monitoring services
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9092:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      resources:
        limits:
          memory: 128M
  

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin

volumes:
  mongo-data:
  prometheus_data: {}
  grafana_data: {}

networks:
  book-inventory-network:
    driver: bridge
